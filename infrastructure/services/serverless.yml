# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: carpal

provider:
  name: aws
  runtime: nodejs6.10
  region: ap-southeast-2
  stage: dev
  environment:
    MAPS_API_KEY: ${file(./secrets.json):MAPS_API_KEY}
    AUTH0_CLIENT_ID: ${file(./props.json):AUTH0_CLIENT_ID}
    MYSQL_PW: ${file(./secrets.json):MYSQL_PW}
    AUTH0_CLIENT_PUBLIC_KEY: ${file(./public_key)}
  
functions:
  auth:
    handler: auth/auth.auth
    cors: true
  loggedin:
    handler: auth/loggedin.loggedin
    events:
      - http:
          path: authcheck
          method: get
          authorizer: auth
          cors: true
  create:
    handler: rides/create.create
    events:
      - http:
          path: rides
          method: post
          cors: true

  list:
    handler: rides/list.list
    # runtime: nodejs8.10
    events:
      - http:
          path: rides
          method: get
          cors: true

  maps:
    handler: map/maps.maps
    events:
      - http:
          path: map
          method: get
          cors: true

  # get:
  #   handler: todos/get.get
  #   events:
  #     - http:
  #         path: todos/{id}
  #         method: get
  #         cors: true

  # update:
  #   handler: todos/update.update
  #   events:
  #     - http:
  #         path: todos/{id}
  #         method: put
  #         cors: true

  # delete:
  #   handler: todos/delete.delete
  #   events:
  #     - http:
  #         path: todos/{id}
  #         method: delete
  #         cors: true

resources:
  Resources:
    GatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: EXPIRED_TOKEN
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'
    AuthFailureGatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'
