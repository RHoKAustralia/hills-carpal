# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
jobs:
  ui-build:
    docker:
      - image: circleci/node:8

    working_directory: ~/carpal/frontend

    steps:
      - checkout:
          path: ~/carpal
      
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      
      - run: yarn run build

      - store_artifacts:
          path: build/

      - persist_to_workspace:
          root: build
          paths:
            - '*'
  ui-deploy:
    docker:
      - image: circleci/python:3.6.4
    working_directory: ~/carpal/frontend
    steps:
      - attach_workspace:
          at: /tmp/build
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Deploy to S3
          command: aws s3 sync /tmp/build/ s3://hills-carpal-dev/ --delete
  services-build:
    docker:
      - image: circleci/node:8
      - image: mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: admin
    working_directory: ~/carpal/backend
    steps:
      - checkout:
          path: ~/carpal
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run: yarn install
      - run: yarn run create-db
      - run: yarn run refresh-db
      - run: yarn test
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      
      - persist_to_workspace:
          root: ~/carpal/backend
          paths:
            - '*'

  services-deploy:
    docker:
      - image: circleci/node:8
    working_directory: ~/carpal
    steps:
      - attach_workspace:
          at: /tmp/carpal
      - run:
          name: Move code from attached workspace to working directory
          command: mv /tmp/carpal/* .
      - run: ls -lah
      - run: ./writeSecrets.sh
      - run: yarn run deploy-sls
      - run: yarn run refresh-db
workflows:
  version: 2
  application-build-deploy:
    jobs:
      - services-build
      - ui-build
      - ui-deploy:
          requires:
            - ui-build
          filters:
            branches:
              only: master
      - services-deploy:
          requires:
            - services-build
          filters:
            branches:
              only: master
